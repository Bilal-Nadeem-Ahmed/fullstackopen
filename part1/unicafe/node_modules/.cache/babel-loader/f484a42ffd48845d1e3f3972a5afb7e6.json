{"ast":null,"code":"var _jsxFileName = \"/home/bilal/Documents/github/fullstackopen/part1/unicafe/src/components/statistics/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const total = good + neutral + bad;\n  const average = (good - bad) / total;\n  const positive = good / total * 100;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"total \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average ? average : 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive ? positive : 0, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/bilal/Documents/github/fullstackopen/part1/unicafe/src/components/statistics/index.js"],"names":["Statistics","good","neutral","bad","total","average","positive"],"mappings":";;;;AAAA,MAAMA,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,OAAN;AAAcC,EAAAA;AAAd,CAAD,KAAwB;AACvC,QAAMC,KAAK,GAACH,IAAI,GAAEC,OAAN,GAAcC,GAA1B;AACA,QAAME,OAAO,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAeC,KAA/B;AACA,QAAME,QAAQ,GAAIL,IAAI,GAAEG,KAAP,GAAgB,GAAjC;AACA,sBAAQ;AAAA,4BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAEN;AAAA,2BAAUH,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFM,eAGN;AAAA,6BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHM,eAIN;AAAA,yBAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJM,eAKN;AAAA,2BAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YALM,eAMN;AAAA,6BAAYC,OAAO,GAACA,OAAD,GAAU,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YANM,eAON;AAAA,8BAAaC,QAAQ,GAAEA,QAAF,GAAY,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPM;AAAA,kBAAR;AASH,CAbD;;KAAMN,U;AAeN,eAAeA,UAAf","sourcesContent":["const Statistics = ({good,neutral,bad}) => {\n    const total=good +neutral+bad\n    const average = (good - bad )/ total\n    const positive = (good /total) * 100 \n    return (<>\n     <h2>Statistics</h2>\n      <p> good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>total {total}</p>\n      <p>average {average?average :0}</p>\n      <p>positive {positive? positive: 0} %</p>\n    </>);\n}\n \nexport default Statistics;"]},"metadata":{},"sourceType":"module"}